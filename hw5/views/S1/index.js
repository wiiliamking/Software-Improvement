// Generated by LiveScript 1.3.1
(function(){
  var Button, addListenerToButtons, init, addListenerToBubble, initByLeaving, adder, robot, buttons, bubble, order, pointer, getNext;
  Button = (function(){
    Button.displayName = 'Button';
    var prototype = Button.prototype, constructor = Button;
    Button.buttons = [];
    Button.showSum = function(){
      if (this.bubble.hasClass("disable")) {
        return;
      }
      this.bubble.removeClass("enable");
      this.bubble.addClass("disable").addClass("show");
      this.bubble.find('#sum').text(adder.sum);
    };
    Button.enableOtherButtons = function(exceptButton){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== exceptButton && button.dom.hasClass("disable")) {
          button.enable();
        }
      }
    };
    Button.disableOtherButtons = function(exceptButton){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button !== exceptButton && button.dom.hasClass("enable")) {
          button.disable();
        }
      }
    };
    Button.allButtonIsCompleted = function(){
      var i$, ref$, len$, button;
      for (i$ = 0, len$ = (ref$ = this.buttons).length; i$ < len$; ++i$) {
        button = ref$[i$];
        if (button.state !== 'completed') {
          return false;
        }
      }
      return true;
    };
    function Button(dom, successMessage, errorMessage, callback){
      var this$ = this;
      this.dom = dom;
      this.successMessage = successMessage;
      this.errorMessage = errorMessage;
      this.callback = callback;
      this.state = 'enable';
      this.dom.addClass('enable');
      this.dom.click(function(){
        if (this$.state !== 'enable') {
          return;
        }
        this$.waiting();
        this$.constructor.disableOtherButtons(this$);
        this$.fetchShowNumber();
      });
      this.constructor.buttons.push(this);
      this.dom.addClass('enable');
    }
    prototype.enable = function(){
      this.state = 'enable';
      this.dom.removeClass('disable').removeClass('completed').removeClass('waiting');
      return this.dom.addClass('enable');
    };
    prototype.waiting = function(){
      this.state = 'waiting';
      this.dom.removeClass('enable');
      this.dom.addClass('waiting');
      return this.dom.find('.unread').text("...");
    };
    prototype.disable = function(){
      this.state = 'disable';
      this.dom.removeClass('enable');
      return this.dom.addClass('disable');
    };
    prototype.completed = function(){
      this.state = 'completed';
      this.dom.removeClass('waiting');
      return this.dom.addClass('completed');
    };
    prototype.fetchShowNumber = function(){
      var this$ = this;
      $.get('/', function(num){
        var failed;
        if (this$.state !== 'waiting') {
          return;
        }
        failed = this$.randomFail();
        if (failed) {
          this$.callback(this$.errorMessage, num);
        } else {
          this$.callback(null, num);
          adder.add(num);
          this$.show(num);
        }
        this$.completed();
        this$.constructor.enableOtherButtons(this$);
        if (this$.constructor.allButtonIsCompleted()) {
          this$.constructor.bubble.removeClass('disable');
          this$.constructor.bubble.addClass('enable');
        }
      });
    };
    prototype.randomFail = function(){
      return Math.random() > 0.5;
    };
    prototype.show = function(num){
      return this.dom.find('.unread').text(num);
    };
    return Button;
  }());
  $(function(){
    Button.bubble = $('#info-bar');
    addListenerToButtons(function(){
      robot.getNext();
    });
    addListenerToBubble();
    init();
    return initByLeaving();
  });
  addListenerToButtons = function(next){
    var successMessages, errorMessages, doms, i$, len$, i, dom, button;
    successMessages = ['这是一个天大的秘密', '我不知道', '你不知道', '他不知道', '才怪'];
    errorMessages = ['这不是个天大的秘密', '我知道', '你知道', '他知道', '才怪个锤子'];
    doms = $(".button");
    for (i$ = 0, len$ = doms.length; i$ < len$; ++i$) {
      i = i$;
      dom = doms[i$];
      button = new Button($(dom), successMessages[i], errorMessages[i], fn$);
    }
    function fn$(err, num){
      if (err) {
        console.log('Error happen:', err);
        adder.add(num);
        this.show(num);
      }
    }
  };
  init = function(){
    var i$, ref$, len$, button;
    for (i$ = 0, len$ = (ref$ = Button.buttons).length; i$ < len$; ++i$) {
      button = ref$[i$];
      button.enable();
    }
    Button.bubble.removeClass("enable").addClass("disable").removeClass("show");
    adder.reset();
  };
  addListenerToBubble = function(){
    $('#info-bar').addClass('disable');
    $('#info-bar').click(function(){
      Button.showSum();
    });
  };
  initByLeaving = function(){
    $('#button').mouseleave(init);
  };
  adder = {
    sum: 0,
    add: function(number){
      this.sum += parseInt(number);
    },
    reset: function(){
      this.sum = 0;
    }
  };
  robot = [
    buttons = $(".button"), bubble = $('#info-bar'), order = [0, 1, 2, 3, 4], pointer = 0, getNext = function(){
      if (pointer < order.length) {
        return this.buttons[pointer].click();
      } else {
        return this.bubble.click();
      }
    }
  ];
}).call(this);
